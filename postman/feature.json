{
  "info": {
    "_postman_id": "9bf0d759-8940-473b-9779-c796585a1c30",
    "name": "Feature_comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "37947088"
  },
  "item": [
    {
      "name": "Add. первый пользователь",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Пользователь должен содержать поля: id, name, email\", function () {",
              "pm.expect(target).to.have.property('id');",
              "pm.expect(target).to.have.property('name');",
              "pm.expect(target).to.have.property('email');",
              "});",
              "",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
              "    pm.expect(target.id).to.not.be.null;",
              "    pm.expect(source.name).equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');",
              "    pm.expect(source.email).equal(target.email, 'Почта пользователя должна соответствовать отправленной в запросе');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Andrey\",\n    \"email\": \"AAndreev@mail.ru\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/admin/users",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. второй пользователь",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Пользователь должен содержать поля: id, name, email\", function () {",
              "pm.expect(target).to.have.property('id');",
              "pm.expect(target).to.have.property('name');",
              "pm.expect(target).to.have.property('email');",
              "});",
              "",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
              "    pm.expect(target.id).to.not.be.null;",
              "    pm.expect(source.name).equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');",
              "    pm.expect(source.email).equal(target.email, 'Почта пользователя должна соответствовать отправленной в запросе');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Sergey\",\n    \"email\": \"SSSerjjjj@mail.ru\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/admin/users",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. третий пользователь",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Пользователь должен содержать поля: id, name, email\", function () {",
              "pm.expect(target).to.have.property('id');",
              "pm.expect(target).to.have.property('name');",
              "pm.expect(target).to.have.property('email');",
              "});",
              "",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
              "    pm.expect(target.id).to.not.be.null;",
              "    pm.expect(source.name).equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');",
              "    pm.expect(source.email).equal(target.email, 'Почта пользователя должна соответствовать отправленной в запросе');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Dima\",\n    \"email\": \"Dimonnnn@mail.ru\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/admin/users",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "users"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. Категория 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Категория должна содержать поля: id, name\", function () {",
              "pm.expect(target).to.have.property('id');",
              "pm.expect(target).to.have.property('name');",
              "});",
              "",
              "pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
              "    pm.expect(target.id).to.not.be.null;",
              "    pm.expect(source.name).equal(target.name, 'Название категории должно совпадать с отправленным');",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Концерты\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/admin/categories",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "categories"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. Событие 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);  ",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Событие должно содержать поля: id, title, annotation, category, paid, eventDate, initiator, description, participantLimit, state, createdOn, location, requestModeration\", function () {",
              "pm.expect(target).to.have.property('id');",
              "pm.expect(target).to.have.property('title');",
              "pm.expect(target).to.have.property('annotation');",
              "pm.expect(target).to.have.property('category');",
              "pm.expect(target).to.have.property('paid');",
              "pm.expect(target).to.have.property('eventDate');",
              "pm.expect(target).to.have.property('initiator');",
              "pm.expect(target).to.have.property('description');",
              "pm.expect(target).to.have.property('participantLimit');",
              "pm.expect(target).to.have.property('state');",
              "pm.expect(target).to.have.property('createdOn');",
              "pm.expect(target).to.have.property('location');",
              "pm.expect(target).to.have.property('requestModeration');",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"annotation\": \"Концерт зарубежных исполнителей\",\n    \"category\": 1,\n    \"description\": \"Неповторимый концерт, на котором выступят известные зарубежные артисты. Погрузитесь в атмосферу музыки и наслаждайтесь выступлениями ваших любимых исполнителей. Не упустите шанс увидеть их вживую!\",\n    \"eventDate\": \"2025-03-15 20:00:00\",\n    \"location\": {\n    \"lat\": 23.51,\n    \"lon\": 15.34\n  },\n    \"title\": \"Звезды мировой сцены: Концерт 2025\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/users/:userId/events",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Aproove. Событие 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
              "    pm.response.to.be.ok;    ",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"stateAction\": \"PUBLISH_EVENT\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/admin/events/:eventId",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. Событие 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
              "    pm.response.to.have.status(201);  ",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const source = JSON.parse(pm.request.body.raw);",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Событие должно содержать поля: id, title, annotation, category, paid, eventDate, initiator, description, participantLimit, state, createdOn, location, requestModeration\", function () {",
              "pm.expect(target).to.have.property('id');",
              "pm.expect(target).to.have.property('title');",
              "pm.expect(target).to.have.property('annotation');",
              "pm.expect(target).to.have.property('category');",
              "pm.expect(target).to.have.property('paid');",
              "pm.expect(target).to.have.property('eventDate');",
              "pm.expect(target).to.have.property('initiator');",
              "pm.expect(target).to.have.property('description');",
              "pm.expect(target).to.have.property('participantLimit');",
              "pm.expect(target).to.have.property('state');",
              "pm.expect(target).to.have.property('createdOn');",
              "pm.expect(target).to.have.property('location');",
              "pm.expect(target).to.have.property('requestModeration');",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"annotation\": \"Фестиваль альтернативной музыки\",\n    \"category\": 1,\n    \"description\": \"Присоединяйтесь к нам на уникальном фестивале альтернативной музыки, где выступят талантливые артисты со всего мира. Откройте для себя новые звучания и насладитесь атмосферой творчества и свободы. Удивительные выступления, мастер-классы и много сюрпризов ждут вас!\",\n    \"eventDate\": \"2025-06-10 18:00:00\",\n    \"location\": {\n        \"lat\": 52.32,\n        \"lon\": 21.44\n    },\n    \"title\": \"Альтернативный звук: Фестиваль 2025\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/users/:userId/events",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Aproove. Событие 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"stateAction\": \"PUBLISH_EVENT\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/admin/events/:eventId",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. Комментарий 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const source = JSON.parse(pm.request.body.raw)",
              "",
              "pm.test(\"Status code is 200 or 201\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
              "});",
              "pm.test(\"Has comment create response\", function () {",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "pm.test(\"Test comment 'id' field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});",
              "pm.test(\"Test comment 'text' field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('text');",
              "    pm.expect(jsonData.text, `\"text\" must be \"${source.text}\"`).to.eql(source.text);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "text",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"text\": \"Класс! Уже взял билеты\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/users/:userId/events/:eventId/comments",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events",
            ":eventId",
            "comments"
          ],
          "query": [
            {
              "key": "",
              "value": "",
              "disabled": true
            },
            {
              "key": "",
              "value": null,
              "disabled": true
            }
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. Комментарий 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const source = JSON.parse(pm.request.body.raw)",
              "",
              "pm.test(\"Status code is 200 or 201\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
              "});",
              "pm.test(\"Has comment create response\", function () {",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "pm.test(\"Test comment 'id' field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});",
              "pm.test(\"Test comment 'text' field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('text');",
              "    pm.expect(jsonData.text, `\"text\" must be \"${source.text}\"`).to.eql(source.text);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"text\": \"Ерунда какая-то! Кто туда пойдет вообще\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/users/:userId/events/:eventId/comments",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events",
            ":eventId",
            "comments"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add. Комментарий 3",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const source = JSON.parse(pm.request.body.raw)",
              "",
              "pm.test(\"Status code is 200 or 201\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
              "});",
              "pm.test(\"Has comment create response\", function () {",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "pm.test(\"Test comment 'id' field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "});",
              "pm.test(\"Test comment 'text' field\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('text');",
              "    pm.expect(jsonData.text, `\"text\" must be \"${source.text}\"`).to.eql(source.text);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"text\": \"Говорят, что в следующем году будет такой же фестиваль\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:8080/users/:userId/events/:eventId/comments",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events",
            ":eventId",
            "comments"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "eventId",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get. Все комментарии события",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
              "    pm.response.to.be.ok;    ",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Комментарий должн содержать поля: id, text, authorName, event, created\", function () {",
              "    pm.expect(target[0]).to.have.property('id');",
              "    pm.expect(target[0]).to.have.property('text');",
              "    pm.expect(target[0]).to.have.property('authorName');",
              "    pm.expect(target[0]).to.have.property('event');",
              "    pm.expect(target[0]).to.have.property('created');",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "localhost:8080/events/:eventId/comments",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "events",
            ":eventId",
            "comments"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get. Все комментарии пользователя к событию",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
              "    pm.response.to.be.ok;    ",
              "    pm.response.to.be.withBody;",
              "    pm.response.to.be.json;",
              "});",
              "",
              "const target = pm.response.json();",
              "",
              "pm.test(\"Комментарий должн содержать поля: id, text, authorName, event, created\", function () {",
              "    pm.expect(target[0]).to.have.property('id');",
              "    pm.expect(target[0]).to.have.property('text');",
              "    pm.expect(target[0]).to.have.property('authorName');",
              "    pm.expect(target[0]).to.have.property('event');",
              "    pm.expect(target[0]).to.have.property('created');",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "localhost:8080/users/:userId/events/:eventId/comments",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "events",
            ":eventId",
            "comments"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "eventId",
              "value": "3"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete. Комментарий 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "localhost:8080/users/:userId/comments/:commentId",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "users",
            ":userId",
            "comments",
            ":commentId"
          ],
          "variable": [
            {
              "key": "userId",
              "value": "2"
            },
            {
              "key": "commentId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete. (АДМИН) Все комментарии",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Ответ должен содержать код статуса 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "localhost:8080/admin/comments/events/:eventId",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "admin",
            "comments",
            "events",
            ":eventId"
          ],
          "variable": [
            {
              "key": "eventId",
              "value": "1"
            }
          ]
        }
      },
      "response": []
    }
  ]
}